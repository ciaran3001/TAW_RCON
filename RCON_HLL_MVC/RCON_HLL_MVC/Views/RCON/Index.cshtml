@model RCON_HLL_MVC.Models.RconCommandsModel
@{
    ViewBag.Title = "Index";
}


<div class="container">
    <div class="section">
        <div class="row">
            <div class="col-sm-12">
                <h2>Hell Let Loose RCON</h2>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <p><b>Server: </b>176.57.168.232</p>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <h3>Current available RCON Commands:</h3>
                </div>
            </div>
            <hr />


            <div class="container">
                <!-- Filter Input-->
                <label>Filter Command List:</label>
                <input class="form-control" id="myInput" type="text" placeholder="Search..">
                <br>

                <div class="col-sm-7">
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Command</th>
                                <th>Paramter 1</th>
                                <th>Paramter 2</th>
                                <th>Paramter 3</th>
                            </tr>
                        </thead>
                        <tbody id="myTable">
                            @foreach (var item in Model.FoundCommands)
                            {
                                <form >
                                    <tr id="@item.m_name">
                                        <td>
                                            <button type="button" onclick="TriggerCommand('@item.m_name')" class="btn btn-primary">@item.m_name</button>
                                        </td>
                                        @foreach (var param in item.m_parameters)
                                        {

                                            if (param.Type == "int")
                                            {
                                                <td>
                                                    bool required = @param.Optional;

                                                    <label for="textparam">@param.Hint</label><br />
                                                    @if (@param.Optional)
                                                    {
                                                        <input type="number" id="intparam" name="@param.Hint">
                                                    }
                                                    else
                                                    {
                                                        <input type="number" id="intparam" required name="@param.Hint">
                                                    }
                                                    
                                                </td>
                                            }
                                            else if (param.Type == "string")
                                            {
                                                <td>
                                                    <label for="textparam">@param.Hint</label><br />
                                                    @if (@param.Optional)
                                                    {
                                                        <input type="text"  name="@param.Hint" class="form-control" id="textparam">
                                                    }
                                                    else
                                                    {
                                                        <input type="text" name="@param.Hint" required class="form-control" id="textparam">
                                                    }
                                                    
                                                </td>
                                            }
                                            else if (param.Type == "bool")
                                            {
                                                <td>
                                                    <label for="textparam">@param.Hint</label><br />
                                                    @if (@param.Optional)
                                                    {
                                                        <input type="checkbox" name="@param.Hint" data-toggle="toggle">
                                                    }
                                                    else
                                                    {
                                                        <input type="checkbox" name="@param.Hint"  required data-toggle="toggle">
                                                    }
                                                    
                                                </td>
                                            }

                                        }
                                    </tr>
                                </form>
                            }

                        </tbody>
                    </table>
                </div>

                <div class="col-sm-5">
                    <section class="terminal-container terminal-fixed-top">
                        <header class="terminal">
                            <span class="button red"></span>
                            <span class="button yellow"></span>
                            <span class="button green"></span>
                        </header>

                        <div class="terminal-home" id="outputWindow" style="overflow-y: scroll; height:400px;">
                            <p class="console">* Listening for server responses</p>
                        </div>
                    </section>
                </div>
            </div>


    <script>
                //Filter table
                $(document).ready(function () {
                    $("#myInput").on("keyup", function () {
                        var value = $(this).val().toLowerCase();
                        $("#myTable tr").filter(function () {
                            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                        });
                    });
                });
            </script>


            <script>

                var DisplayResponse = function (response) {
                    var OutputDiv = document.getElementById("outputWindow");
                    OutputDiv.innerHTML += " <p id='response'>" +  JSON.stringify(response) + "</p>";

                }
                //Ajax callings:
                var TestGetBans = function () {

                    var myHeaders = new Headers();
                    myHeaders.append("Cookie", "__RequestVerificationToken=O9Tsqe83uZ3pCQQgAw-7X81cxFK4IOBKaKcTFaulDgHKLtODTfojj3NsrKDqJlf_zIJA6YbEwcOTuHx8z8tdYNZzXgT8D1EjmmcZBjw7iII1");

                    var requestOptions = {
                        method: 'POST',
                        headers: myHeaders,
                        redirect: 'follow'
                    };

                    var _response;
                    fetch("http://localhost:61821/RCON/GetBans", requestOptions)
                      .then(response => response.json())
                      .then(result => _response = result)
                      .then(() => DisplayResponse(_response))
                      .catch(error => console.log('error', error));

                    console.log("Response: " + _response);
                }

                var TriggerCommand = function (formid) {
                    var json = CreateCommandJSON(formid);
                    console.log("triggering for: " + formid);

                    var myHeaders = new Headers();
                    myHeaders.append("Cookie", "__RequestVerificationToken=zIJv1u6F-0kyGprYczVv4lDKcu37JH1ql1NuqwK2zJsxNaKd8rspMr8OYTyIcuj04drbSfKAJ3pZde9KipCu5BdobkBUChVRSEiMd2qTsew1");

                    var formdata = new FormData();
                    formdata.append("CommandJSON",json);

                    var requestOptions = {
                        method: 'POST',
                        headers: myHeaders,
                        body: formdata,
                        redirect: 'follow'
                    };

                    fetch("http://localhost:61821/RCON/SendCommand?=", requestOptions)
                      .then(response => response.text())
                      .then(result => alert(result))
                      .catch(error => console.log('error', error));
                }


                var CreateCommandJSON = function (formid) {
                    var obj = {};
                    

                    var form = document.getElementById(formid);

                    inputs = form.getElementsByTagName("input");

                    obj.command = formid;
                    obj.requestor = "placeholder";
                    obj.parameters = [];

                    for (index = 0; index < inputs.length; ++index) {
                        // deal with inputs[index] element.
                        var _tmp = {};
                        _tmp.Hint = inputs[index].name;
                        _tmp.Value = inputs[index].value.toString();
                        _tmp.Type = inputs[index].type.toString();

                        console.log("Found: " + inputs[index].name + ": " + inputs[index].value);
                        obj.parameters[index] = _tmp;
                    }

                    var json = JSON.stringify(obj);
                    console.log(json);
                    return json;
                }

                setInterval(TestGetBans, 5000);

            </script>
        </div>
    </div>

